
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import escpos.EscPos;
import escpos.EscPosConst;
import escpos.Style;
import escpos.barcode.BarCode;
import java.awt.Color;
import java.awt.Image;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import output.PrinterOutputStream;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Lab-3_9
 */
public class cashhome extends javax.swing.JFrame {

    String user;
    ArrayList<mycart> al = new ArrayList();
    MyModel tm;
    int srno = 1;
    int pid;
    String pname;
    String price;
    int bid = 0;

    /**
     * Creates new form cashhome
     */
    public cashhome(String user) {
        initComponents();

        this.user = user;
        lbname.setText(user);
        setSize(600, 700);
        setVisible(true);
        tm = new MyModel();
        jTable1.setModel(tm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbwelcome = new javax.swing.JLabel();
        lbname = new javax.swing.JLabel();
        jPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfpname = new javax.swing.JTextField();
        tfcategory = new javax.swing.JTextField();
        tfprice = new javax.swing.JTextField();
        lbbarcode = new javax.swing.JLabel();
        tfbarcode = new javax.swing.JTextField();
        btshow = new javax.swing.JButton();
        lbquantity = new javax.swing.JLabel();
        tfquantity = new javax.swing.JTextField();
        btcart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbmobile = new javax.swing.JLabel();
        tfmobile = new javax.swing.JTextField();
        btcheckout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nettotal = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lbwelcome.setText("WELCOME");
        getContentPane().add(lbwelcome);
        lbwelcome.setBounds(90, 10, 180, 30);
        getContentPane().add(lbname);
        lbname.setBounds(220, 0, 190, 40);

        jPanel.setLayout(null);
        jPanel.add(jLabel3);
        jLabel3.setBounds(20, 20, 130, 110);

        tfpname.setEditable(false);
        tfpname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfpnameActionPerformed(evt);
            }
        });
        jPanel.add(tfpname);
        tfpname.setBounds(210, 20, 130, 30);

        tfcategory.setEditable(false);
        jPanel.add(tfcategory);
        tfcategory.setBounds(210, 60, 130, 30);

        tfprice.setEditable(false);
        jPanel.add(tfprice);
        tfprice.setBounds(210, 100, 130, 30);

        getContentPane().add(jPanel);
        jPanel.setBounds(40, 110, 380, 160);

        lbbarcode.setText("Enter Barcode");
        getContentPane().add(lbbarcode);
        lbbarcode.setBounds(40, 60, 100, 30);
        getContentPane().add(tfbarcode);
        tfbarcode.setBounds(160, 60, 130, 30);

        btshow.setText("SHOW");
        btshow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btshowActionPerformed(evt);
            }
        });
        getContentPane().add(btshow);
        btshow.setBounds(320, 60, 100, 30);

        lbquantity.setText("Enter Quantity");
        getContentPane().add(lbquantity);
        lbquantity.setBounds(40, 280, 110, 30);
        getContentPane().add(tfquantity);
        tfquantity.setBounds(170, 280, 140, 30);

        btcart.setText("Add to Cart");
        btcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcartActionPerformed(evt);
            }
        });
        getContentPane().add(btcart);
        btcart.setBounds(330, 280, 100, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 340, 390, 220);

        lbmobile.setText("Enter Mobile No.");
        getContentPane().add(lbmobile);
        lbmobile.setBounds(40, 610, 90, 40);

        tfmobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfmobileActionPerformed(evt);
            }
        });
        getContentPane().add(tfmobile);
        tfmobile.setBounds(160, 610, 150, 40);

        btcheckout.setText("Check Out");
        btcheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btcheckoutActionPerformed(evt);
            }
        });
        getContentPane().add(btcheckout);
        btcheckout.setBounds(340, 610, 90, 40);

        jLabel1.setText("Net Total: ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 570, 70, 20);
        getContentPane().add(nettotal);
        nettotal.setBounds(330, 570, 90, 20);

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(90, 570, 110, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfpnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfpnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfpnameActionPerformed

    private void btcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcartActionPerformed

        int total = Integer.parseInt(tfquantity.getText()) * Integer.parseInt(price);
        al.add(new mycart(srno, pid + "", pname, Integer.parseInt(price), Integer.parseInt(tfquantity.getText()), total));
        tm.fireTableDataChanged();
        srno++;

        int gtotal = 0;
        for (int i = 0; i < al.size(); i++) {

            gtotal += al.get(i).price * al.get(i).qty;

        }
        nettotal.setText(gtotal + "");

    }//GEN-LAST:event_btcartActionPerformed

    class MyModel extends AbstractTableModel {

        @Override
        public int getRowCount() {
            //To change body of generated methods, choose Tools | Templates.
            return al.size();
        }

        @Override
        public int getColumnCount() {
//To change body of generated methods, choose Tools | Templates.
            return 6;
        }

        @Override
        public Object getValueAt(int i, int j) {
//To change body of generated methods, choose Tools | Templates.
            mycart cat = al.get(i);
            if (j == 0) {
                return cat.srno;
            } else if (j == 1) {
                return cat.pid;
            } else if (j == 2) {
                return cat.pname;
            } else if (j == 3) {
                return cat.price;
            } else if (j == 4) {
                return cat.qty;
            } else {
                return cat.total;
            }

        }

        @Override
        public String getColumnName(int j) {
            String col[] = {"srno", "pid", "pname", "price", "qty", "total"};

            //To change body of generated methods, choose Tools | Templates.
            return col[j];
        }

    }


    private void tfmobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfmobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfmobileActionPerformed

    private void btcheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btcheckoutActionPerformed

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(new Date());

        String mob = tfmobile.getText();

        try {

            ResultSet rs = DBLoader.executeQuery("select * from bill");
            rs.moveToInsertRow();
            rs.updateString("dateofbill", date);
            rs.updateString("mobileno", mob);
            rs.updateString("grandtotal", nettotal.getText());
            rs.insertRow();

            ResultSet rs1 = DBLoader.executeQuery("select max(bid) as bid from bill");

            if (rs1.next()) {

                bid = rs1.getInt("bid");

                for (int i = 0; i < al.size(); i++) {

                    ResultSet rs2 = DBLoader.executeQuery("select * from bill_detail");
                    rs2.moveToInsertRow();
                    rs2.updateInt("bid", bid);
                    rs2.updateInt("pid", Integer.parseInt(al.get(i).pid));
                    rs2.updateString("pname", al.get(i).pname);
                    rs2.updateString("price", al.get(i).price + "");
                    rs2.updateString("qty", al.get(i).qty + "");
                    rs2.updateString("totalprice", al.get(i).total + "");
                    rs2.insertRow();

                }

                JOptionPane.showMessageDialog(rootPane, "Your order has been taken. processing your bill....");
                getbillprited();
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_btcheckoutActionPerformed

    void getbillprited() {

        try {

            PrintService printService = PrinterOutputStream.getPrintServiceByName("THERMAL Receipt Printer");
            PrinterOutputStream printerOutputStream = new PrinterOutputStream(printService);
            EscPos escpos = new EscPos(printerOutputStream);
            Style header = new Style()
                    .setFontSize(Style.FontSize._2, Style.FontSize._2)
                    .setJustification(EscPosConst.Justification.Center)
                    .setBold(true)
                    .setColorMode(Style.ColorMode.WhiteOnBlack);

            Style address = new Style()
                    .setFontName(Style.FontName.Font_A_Default)
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);
            escpos.writeLF(header, "Point of Sale");
            escpos.writeLF(address, "SCO-108, Ranjeet Avenue");
//            escpos.writeLF(address, "+918725983606");
//            escpos.writeLF(address, "GSTIN : 23AADGS334SDZDT");
//            escpos.writeLF(address, "Vat No : 94832848349");
            escpos.writeLF(address, new Date() + "");
//            escpos.writeLF(address, "Table No. 120");
            escpos.writeLF(address, "    ");
            escpos.writeLF(address, "    ");

//            QRCode qrCode = new QRCode()
//                    .setSize(5)
//                    .setModel(QRCode.QRModel._2)
//                    .setJustification(EscPosConst.Justification.Center);
//
//            escpos.write(qrCode, "QR Code");
//
//            escpos.writeLF(address, "    ");
//            BarCode barcode = new BarCode();
//            barcode.setJustification(EscPosConst.Justification.Center);
//            barcode.setHRIPosition(BarCode.BarCodeHRIPosition.BelowBarCode);
//            escpos.write(barcode, tfbarcode.getText());
//            GraphicsImageWrapper imageWrapper = new GraphicsImageWrapper();
//            imageWrapper.setJustification(EscPosConst.Justification.Center);
//            
//            BitonalThreshold bod = new BitonalThreshold();
//            BufferedImage bimg = ImageIO.read(new File("src/images/goku.png"));
//            EscPosImage escPos = new EscPosImage(bimg, bod);
//            escpos.write(imageWrapper, escPos);
//
////            BitonalThreshold bt = new BitonalThreshold();
            Style lineStyle = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);

            escpos.writeLF(lineStyle, "----------------------------------------");

            Style rightText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Right);

            Style leftText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Left_Default);
            Style justifiedText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);

            escpos.writeLF(rightText, "Bill No : " + bid);
            escpos.writeLF(leftText, "Cashier: "+ user);

            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.writeLF(rightText, "Items");
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.writeLF("Item            Rate    Qty    Price");
            System.out.println("Item             Rate    Qty    Price");
            escpos.writeLF(lineStyle, "----------------------------------------");
            for (int i = 0; i < al.size(); i++) {
                escpos.write(leftText, al.get(i).pname +"             "+al.get(i).price + "    " + al.get(i).qty + "    " + al.get(i).total);
               
                escpos.writeLF("");

                System.out.print(al.get(i).pname);
                System.out.print(al.get(i).price + "    " + al.get(i).qty + "    " + al.get(i).total);
                System.out.println("");
            }
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.write(justifiedText, "Net Payable:  "+nettotal.getText());

//            Style justifiedText = new Style()
//                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
//                    .setJustification(EscPosConst.Justification.Left_Default);
            escpos.feed(5);
            escpos.cut(EscPos.CutMode.PART);
            escpos.close();

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }


    private void btshowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btshowActionPerformed
        String barcode = tfbarcode.getText();
        try {
            ResultSet rs = DBLoader.executeQuery("select * from product where barcode= '" + barcode + "'");
            if (rs.next()) {
                pid = rs.getInt("pid");
                pname = rs.getString("pname");
                String category = rs.getString("category");
                price = rs.getString("price");
                String pic = rs.getString("photo");
                BufferedImage img = ImageIO.read(new File(pic));
                jLabel3.setIcon(new ImageIcon(img));
                tfpname.setText(pname);
                tfcategory.setText(category);
                tfprice.setText(price);

            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }//GEN-LAST:event_btshowActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int select = jTable1.getSelectedRow();
        if (select < 0) {

            JOptionPane.showMessageDialog(rootPane, "Select a row first");

        } else {

            al.remove(select);
            tm.fireTableDataChanged();

            int gtotal = 0;
            for (int i = 0; i < al.size(); i++) {

                gtotal += al.get(i).price * al.get(i).qty;

            }
            nettotal.setText(gtotal + "");

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cashhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cashhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cashhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cashhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new cashhome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btcart;
    private javax.swing.JButton btcheckout;
    private javax.swing.JButton btshow;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbbarcode;
    private javax.swing.JLabel lbmobile;
    private javax.swing.JLabel lbname;
    private javax.swing.JLabel lbquantity;
    private javax.swing.JLabel lbwelcome;
    private javax.swing.JLabel nettotal;
    private javax.swing.JTextField tfbarcode;
    private javax.swing.JTextField tfcategory;
    private javax.swing.JTextField tfmobile;
    private javax.swing.JTextField tfpname;
    private javax.swing.JTextField tfprice;
    private javax.swing.JTextField tfquantity;
    // End of variables declaration//GEN-END:variables
}
